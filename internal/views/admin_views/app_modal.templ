package admin_views

import "github.com/FredericoBento/HandGame/internal/logger"
import "github.com/FredericoBento/HandGame/internal/services"

templ GameModal(game services.GameService) {
	  <div class="modal-card" id="admin-game-modal-content">
	    <header class="modal-card-head">
	      <p class="modal-card-title">{ game.GetName() }
        if game.GetStatus().IsActive() {
            <span class="tag is-success">Running</span>
          } else {
            if game.GetStatus().HasStartedOnce() {
              <span class="tag is-danger">Stopped</span>
            } else {
              <span class="tag is-danger">Off</span>
            }
          }
				</p>
	      <button class="delete" aria-label="close"></button>
	    </header>
	    <section class="modal-card-body">
			@GameModalLogs(game.GetLogs())
	    </section>
	    <footer class="modal-card-foot">
	      // <div class="buttons">
	        // <button class="button is-success">Save changes</button>
	        // <button class="button">Cancel</button>
	      // </div>
	    </footer>
			</div>
}

templ GameModalLogs(logs []logger.PrettyLogs, err error) {
	<div>
		<h1 class="subtitle">Logs</h1>
	  <hr class="header-line">
		<div class="content logs-content">
			if err != nil {
				<p>Couldnt retrieve logs {err.Error()}</p>
			} else {
			  if len(logs) == 0 {
					<p>Nothing has been logged yet</p>
				}
				for _, log := range logs {
					<div class="columns is-vcentered mb-0">
						// <p class="is-size-6">
							<span class="column is-2"> @LogTypeTag(log.Level) </span>
							<span class="column is-4"> { log.Time.Format("02-01-2006 15:04")} </span>
						 	<span class="column is-4"> { log.Msg } </span>
						// </p>
					</div>
				}
			}
		</div>
	</div>
}

templ LogTypeTag(logType string) {
	switch logType {
		case "INFO":
		  <span class="tag is-info">Info</span>
		case "ERROR":
		  <span class="tag is-danger">Error</span>
		case "WARN":
		  <span class="tag is-warning">Warning</span>
		default:
		  <span class="tag is-dark">Unknown</span>
	}
} 
